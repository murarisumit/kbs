<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tricks on knowledge base</title>
    <link>https://kbs.murarisumit.in/tags/tricks/</link>
    <description>Recent content in tricks on knowledge base</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 04 Aug 2021 08:29:34 +0530</lastBuildDate><atom:link href="https://kbs.murarisumit.in/tags/tricks/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Golang Slice Tricks</title>
      <link>https://kbs.murarisumit.in/bookmarks/golang-slice-tricks/</link>
      <pubDate>Wed, 04 Aug 2021 08:29:34 +0530</pubDate>
      
      <guid>https://kbs.murarisumit.in/bookmarks/golang-slice-tricks/</guid>
      <description>Filtering with allocating This trick uses the fact that a slice shares the same backing array and capacity as the original, so the storage is reused for the filtered slice. Of course, the original contents are modified.
1 2 3 4 5 6  b := a[:0] for _, x := range a { if f(x) { b = append(b, x) } }   </description>
    </item>
    
  </channel>
</rss>
