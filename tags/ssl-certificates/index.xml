<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ssl-Certificates on knowledge base</title><link>https://kbs.murarisumit.in/tags/ssl-certificates/</link><description>Recent content in Ssl-Certificates on knowledge base</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 21 Jul 2020 05:06:45 +0530</lastBuildDate><atom:link href="https://kbs.murarisumit.in/tags/ssl-certificates/index.xml" rel="self" type="application/rss+xml"/><item><title>Simplified view on How Certificate Signing works</title><link>https://kbs.murarisumit.in/tils/how-certificate-signing-works/</link><pubDate>Tue, 21 Jul 2020 05:06:45 +0530</pubDate><guid>https://kbs.murarisumit.in/tils/how-certificate-signing-works/</guid><description>&lt;p>Reference: &lt;a href="https://scotthelme.co.uk/cross-signing-alternate-trust-paths-how-they-work/">https://scotthelme.co.uk/cross-signing-alternate-trust-paths-how-they-work/&lt;/a>&lt;/p>
&lt;h4 id="steps-for-signing-certificate-by-ca">Steps for signing certificate by CA&lt;/h4>
&lt;ol>
&lt;li>The Subscriber (the person asking a CA to issue them a certificate) sends a Certificate Signing Request (CSR) to the CA which contains all of their details like name, domain name etc.&lt;/li>
&lt;li>The CA will then take a blank certificate and begins to fill in the details of the Subscriber, validating ownership of the domain along the way, until they have completed all of the fields in the certificate.&lt;/li>
&lt;li>At this stage we have what we call the Pre-Certificate, it&amp;rsquo;s basically a finished certificate ready to issue but the only thing that&amp;rsquo;s missing is the CAs signature on the bottom of the certificate to make it official&lt;/li>
&lt;/ol>
&lt;h4 id="signing-of-certificate">Signing of certificate&lt;/h4>
&lt;ol start="4">
&lt;li>CA takes Pre-Certificate and running it through a hash function, currently SHA256, to obtain the digest.&lt;/li>
&lt;li>The second step is the CA then taking that digest and encrypting it with their private key.&lt;/li>
&lt;li>This encrypted digest is the signature and once appended to the end of the file we now have a signed certificate that can be issued to the Subscriber.&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>Rules public key encryption&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>For every private key, there is only one corresponding public key.&lt;/li>
&lt;li>Also Data encrypted with the public key can only be decrypted with it&amp;rsquo;s corresponding private key, and data encrypted with the private key can only be decrypted with it&amp;rsquo;s corresponding public key.&lt;/li>
&lt;li>More rules and info at: &lt;a href="https://www.cloudflare.com/learning/ssl/how-does-public-key-encryption-work/">https://www.cloudflare.com/learning/ssl/how-does-public-key-encryption-work/&lt;/a>&lt;/li>
&lt;/ol>
&lt;hr>
&lt;p>Q: How does adding the &lt;strong>encrypted digest&lt;/strong> i.e. signature makes it signed certificate ?&lt;/p>
&lt;p>A: It can better be explained by putting browser in picture and looking at what it does while requesting https website.&lt;/p>
&lt;hr>
&lt;h4 id="what-browser-does">What browser does&lt;/h4>
&lt;ol>
&lt;li>During tls handshake with https endpoint, it fetches associate intermediate certificate and root certificate.
&lt;ul>
&lt;li>We need to upload intermediate certificate(public key of CA) and root certificate while uploading ssl certificate.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Browser now decrypts the digest using intermediate certificates, if it is able to decrypt using intermediate key, it means that above certificate is signed by private-key of CA(data encrypted with the private key can only be decrypted with it&amp;rsquo;s corresponding public key)&lt;/li>
&lt;li>Browser itself also calculate hash of pre-certificate to compare with hash it got in step 2 after decrypting digest.&lt;/li>
&lt;li>If both are correct means,
&lt;ul>
&lt;li>The signature definitely came from the CA. (Authenticity) - Step 2&lt;/li>
&lt;li>The certificate has not been tampered with. (Integrity) - Step 3&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>Above is over-simplified explanation of what happens, above all is taken from 1st half of post at : &lt;a href="https://scotthelme.co.uk/cross-signing-alternate-trust-paths-how-they-work/">https://scotthelme.co.uk/cross-signing-alternate-trust-paths-how-they-work/&lt;/a>&lt;/p>
&lt;p>If you want to read further, continue reading at : &lt;a href="https://scotthelme.co.uk/cross-signing-alternate-trust-paths-how-they-work/">https://scotthelme.co.uk/cross-signing-alternate-trust-paths-how-they-work/&lt;/a>&lt;/p></description></item></channel></rss>